name: Release

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'adopt'

      - name: Make Gradle wrapper executable
        run: chmod +x ./gradlew

      - name: Build for Linux
        run: |
          ./gradlew :composeApp:packageReleaseDistributionForCurrentOS
          ls -R composeApp/build

      - name: Build for Windows
        run: |
          ./gradlew :composeApp:packageReleaseDistributionForCurrentOS -PtargetOs=windows
          ls -R composeApp/build

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          draft: false
          prerelease: false

#      - name: Debug Build Output
#        run: |
#          echo "ComposeApp directory contents:"
#          ls -R composeApp/build/compose/binaries || echo "ComposeApp build directory does not exist"

      - name: Upload Linux AppImage
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: composeApp/build/compose/binaries/main-release/app/TransactionTracker/bin/TransactionTracker
          asset_name: linuxAppImage
          asset_content_type: application/octet-stream
          
      - name: Upload Linux .deb
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: composeApp/build/compose/binaries/main-release/deb/transactiontracker_${{ steps.version.outputs.version }}_amd64.deb
          asset_name: linuxDebFile
          asset_content_type: application/octet-stream

      - name: Upload Windows Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: composeApp/build/compose/binaries/main-release/app/windowsApp.exe
          asset_name: windowsApp.exe
          asset_content_type: application/octet-stream
